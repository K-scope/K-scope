//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, v2.2.4-2 
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2015.01.08 at 01:05:45 AM JST 
//


package jp.riken.kscope.xcodeml.clang.xml.gen;

import javax.xml.bind.annotation.XmlRegistry;


/**
 * This object contains factory methods for each 
 * Java content interface and Java element interface 
 * generated in the jp.riken.kscope.xcodeml.cc.xml.gen package. 
 * <p>An ObjectFactory allows you to programatically 
 * construct new instances of the Java representation 
 * for XML content. The Java representation of XML 
 * content can consist of schema derived interfaces 
 * and classes representing the binding of schema 
 * type definitions, element declarations and model 
 * groups.  Factory methods for each of these are 
 * provided in this class.
 * 
 */
@XmlRegistry
public class ObjectFactory {


    /**
     * Create a new ObjectFactory that can be used to create new instances of schema derived classes for package: jp.riken.kscope.xcodeml.cc.xml.gen
     * 
     */
    public ObjectFactory() {
    }

    /**
     * Create an instance of {@link CompoundValue }
     * 
     */
    public CompoundValue createCompoundValue() {
        return new CompoundValue();
    }

    /**
     * Create an instance of {@link LshiftExpr }
     * 
     */
    public LshiftExpr createLshiftExpr() {
        return new LshiftExpr();
    }

    /**
     * Create an instance of {@link BinaryExpression }
     * 
     */
    public BinaryExpression createBinaryExpression() {
        return new BinaryExpression();
    }

    /**
     * Create an instance of {@link IntConstant }
     * 
     */
    public IntConstant createIntConstant() {
        return new IntConstant();
    }

    /**
     * Create an instance of {@link FloatConstant }
     * 
     */
    public FloatConstant createFloatConstant() {
        return new FloatConstant();
    }

    /**
     * Create an instance of {@link LonglongConstant }
     * 
     */
    public LonglongConstant createLonglongConstant() {
        return new LonglongConstant();
    }

    /**
     * Create an instance of {@link StringConstant }
     * 
     */
    public StringConstant createStringConstant() {
        return new StringConstant();
    }

    /**
     * Create an instance of {@link MoeConstant }
     * 
     */
    public MoeConstant createMoeConstant() {
        return new MoeConstant();
    }

    /**
     * Create an instance of {@link FuncAddr }
     * 
     */
    public FuncAddr createFuncAddr() {
        return new FuncAddr();
    }

    /**
     * Create an instance of {@link PointerRef }
     * 
     */
    public PointerRef createPointerRef() {
        return new PointerRef();
    }

    /**
     * Create an instance of {@link UnaryExpression }
     * 
     */
    public UnaryExpression createUnaryExpression() {
        return new UnaryExpression();
    }

    /**
     * Create an instance of {@link Var }
     * 
     */
    public Var createVar() {
        return new Var();
    }

    /**
     * Create an instance of {@link VarAddr }
     * 
     */
    public VarAddr createVarAddr() {
        return new VarAddr();
    }

    /**
     * Create an instance of {@link ArrayRef }
     * 
     */
    public ArrayRef createArrayRef() {
        return new ArrayRef();
    }

    /**
     * Create an instance of {@link ArrayAddr }
     * 
     */
    public ArrayAddr createArrayAddr() {
        return new ArrayAddr();
    }

    /**
     * Create an instance of {@link MemberAddr }
     * 
     */
    public MemberAddr createMemberAddr() {
        return new MemberAddr();
    }

    /**
     * Create an instance of {@link MemberRef }
     * 
     */
    public MemberRef createMemberRef() {
        return new MemberRef();
    }

    /**
     * Create an instance of {@link MemberArrayRef }
     * 
     */
    public MemberArrayRef createMemberArrayRef() {
        return new MemberArrayRef();
    }

    /**
     * Create an instance of {@link MemberArrayAddr }
     * 
     */
    public MemberArrayAddr createMemberArrayAddr() {
        return new MemberArrayAddr();
    }

    /**
     * Create an instance of {@link AssignExpr }
     * 
     */
    public AssignExpr createAssignExpr() {
        return new AssignExpr();
    }

    /**
     * Create an instance of {@link PlusExpr }
     * 
     */
    public PlusExpr createPlusExpr() {
        return new PlusExpr();
    }

    /**
     * Create an instance of {@link MinusExpr }
     * 
     */
    public MinusExpr createMinusExpr() {
        return new MinusExpr();
    }

    /**
     * Create an instance of {@link MulExpr }
     * 
     */
    public MulExpr createMulExpr() {
        return new MulExpr();
    }

    /**
     * Create an instance of {@link DivExpr }
     * 
     */
    public DivExpr createDivExpr() {
        return new DivExpr();
    }

    /**
     * Create an instance of {@link ModExpr }
     * 
     */
    public ModExpr createModExpr() {
        return new ModExpr();
    }

    /**
     * Create an instance of {@link RshiftExpr }
     * 
     */
    public RshiftExpr createRshiftExpr() {
        return new RshiftExpr();
    }

    /**
     * Create an instance of {@link BitAndExpr }
     * 
     */
    public BitAndExpr createBitAndExpr() {
        return new BitAndExpr();
    }

    /**
     * Create an instance of {@link BitOrExpr }
     * 
     */
    public BitOrExpr createBitOrExpr() {
        return new BitOrExpr();
    }

    /**
     * Create an instance of {@link BitXorExpr }
     * 
     */
    public BitXorExpr createBitXorExpr() {
        return new BitXorExpr();
    }

    /**
     * Create an instance of {@link AsgPlusExpr }
     * 
     */
    public AsgPlusExpr createAsgPlusExpr() {
        return new AsgPlusExpr();
    }

    /**
     * Create an instance of {@link AsgMinusExpr }
     * 
     */
    public AsgMinusExpr createAsgMinusExpr() {
        return new AsgMinusExpr();
    }

    /**
     * Create an instance of {@link AsgMulExpr }
     * 
     */
    public AsgMulExpr createAsgMulExpr() {
        return new AsgMulExpr();
    }

    /**
     * Create an instance of {@link AsgDivExpr }
     * 
     */
    public AsgDivExpr createAsgDivExpr() {
        return new AsgDivExpr();
    }

    /**
     * Create an instance of {@link AsgModExpr }
     * 
     */
    public AsgModExpr createAsgModExpr() {
        return new AsgModExpr();
    }

    /**
     * Create an instance of {@link AsgLshiftExpr }
     * 
     */
    public AsgLshiftExpr createAsgLshiftExpr() {
        return new AsgLshiftExpr();
    }

    /**
     * Create an instance of {@link AsgRshiftExpr }
     * 
     */
    public AsgRshiftExpr createAsgRshiftExpr() {
        return new AsgRshiftExpr();
    }

    /**
     * Create an instance of {@link AsgBitAndExpr }
     * 
     */
    public AsgBitAndExpr createAsgBitAndExpr() {
        return new AsgBitAndExpr();
    }

    /**
     * Create an instance of {@link AsgBitOrExpr }
     * 
     */
    public AsgBitOrExpr createAsgBitOrExpr() {
        return new AsgBitOrExpr();
    }

    /**
     * Create an instance of {@link AsgBitXorExpr }
     * 
     */
    public AsgBitXorExpr createAsgBitXorExpr() {
        return new AsgBitXorExpr();
    }

    /**
     * Create an instance of {@link LogEQExpr }
     * 
     */
    public LogEQExpr createLogEQExpr() {
        return new LogEQExpr();
    }

    /**
     * Create an instance of {@link LogNEQExpr }
     * 
     */
    public LogNEQExpr createLogNEQExpr() {
        return new LogNEQExpr();
    }

    /**
     * Create an instance of {@link LogGEExpr }
     * 
     */
    public LogGEExpr createLogGEExpr() {
        return new LogGEExpr();
    }

    /**
     * Create an instance of {@link LogGTExpr }
     * 
     */
    public LogGTExpr createLogGTExpr() {
        return new LogGTExpr();
    }

    /**
     * Create an instance of {@link LogLEExpr }
     * 
     */
    public LogLEExpr createLogLEExpr() {
        return new LogLEExpr();
    }

    /**
     * Create an instance of {@link LogLTExpr }
     * 
     */
    public LogLTExpr createLogLTExpr() {
        return new LogLTExpr();
    }

    /**
     * Create an instance of {@link LogAndExpr }
     * 
     */
    public LogAndExpr createLogAndExpr() {
        return new LogAndExpr();
    }

    /**
     * Create an instance of {@link LogOrExpr }
     * 
     */
    public LogOrExpr createLogOrExpr() {
        return new LogOrExpr();
    }

    /**
     * Create an instance of {@link UnaryMinusExpr }
     * 
     */
    public UnaryMinusExpr createUnaryMinusExpr() {
        return new UnaryMinusExpr();
    }

    /**
     * Create an instance of {@link BitNotExpr }
     * 
     */
    public BitNotExpr createBitNotExpr() {
        return new BitNotExpr();
    }

    /**
     * Create an instance of {@link LogNotExpr }
     * 
     */
    public LogNotExpr createLogNotExpr() {
        return new LogNotExpr();
    }

    /**
     * Create an instance of {@link FunctionCall }
     * 
     */
    public FunctionCall createFunctionCall() {
        return new FunctionCall();
    }

    /**
     * Create an instance of {@link Function }
     * 
     */
    public Function createFunction() {
        return new Function();
    }

    /**
     * Create an instance of {@link CommaExpr }
     * 
     */
    public CommaExpr createCommaExpr() {
        return new CommaExpr();
    }

    /**
     * Create an instance of {@link PostIncrExpr }
     * 
     */
    public PostIncrExpr createPostIncrExpr() {
        return new PostIncrExpr();
    }

    /**
     * Create an instance of {@link PostDecrExpr }
     * 
     */
    public PostDecrExpr createPostDecrExpr() {
        return new PostDecrExpr();
    }

    /**
     * Create an instance of {@link PreIncrExpr }
     * 
     */
    public PreIncrExpr createPreIncrExpr() {
        return new PreIncrExpr();
    }

    /**
     * Create an instance of {@link PreDecrExpr }
     * 
     */
    public PreDecrExpr createPreDecrExpr() {
        return new PreDecrExpr();
    }

    /**
     * Create an instance of {@link CastExpr }
     * 
     */
    public CastExpr createCastExpr() {
        return new CastExpr();
    }

    /**
     * Create an instance of {@link jp.riken.kscope.xcodeml.clang.xml.gen.Value }
     * 
     */
    public jp.riken.kscope.xcodeml.clang.xml.gen.Value createValue() {
        return new jp.riken.kscope.xcodeml.clang.xml.gen.Value();
    }

    /**
     * Create an instance of {@link CondExpr }
     * 
     */
    public CondExpr createCondExpr() {
        return new CondExpr();
    }

    /**
     * Create an instance of {@link SizeOfExpr }
     * 
     */
    public SizeOfExpr createSizeOfExpr() {
        return new SizeOfExpr();
    }

    /**
     * Create an instance of {@link ExprOrType }
     * 
     */
    public ExprOrType createExprOrType() {
        return new ExprOrType();
    }

    /**
     * Create an instance of {@link AddrOfExpr }
     * 
     */
    public AddrOfExpr createAddrOfExpr() {
        return new AddrOfExpr();
    }

    /**
     * Create an instance of {@link XmpDescOf }
     * 
     */
    public XmpDescOf createXmpDescOf() {
        return new XmpDescOf();
    }

    /**
     * Create an instance of {@link CompoundValueExpr }
     * 
     */
    public CompoundValueExpr createCompoundValueExpr() {
        return new CompoundValueExpr();
    }

    /**
     * Create an instance of {@link CompoundValueAddr }
     * 
     */
    public CompoundValueAddr createCompoundValueAddr() {
        return new CompoundValueAddr();
    }

    /**
     * Create an instance of {@link GccAlignOfExpr }
     * 
     */
    public GccAlignOfExpr createGccAlignOfExpr() {
        return new GccAlignOfExpr();
    }

    /**
     * Create an instance of {@link GccLabelAddr }
     * 
     */
    public GccLabelAddr createGccLabelAddr() {
        return new GccLabelAddr();
    }

    /**
     * Create an instance of {@link GccCompoundExpr }
     * 
     */
    public GccCompoundExpr createGccCompoundExpr() {
        return new GccCompoundExpr();
    }

    /**
     * Create an instance of {@link CompoundStatement }
     * 
     */
    public CompoundStatement createCompoundStatement() {
        return new CompoundStatement();
    }

    /**
     * Create an instance of {@link Symbols }
     * 
     */
    public Symbols createSymbols() {
        return new Symbols();
    }

    /**
     * Create an instance of {@link Id }
     * 
     */
    public Id createId() {
        return new Id();
    }

    /**
     * Create an instance of {@link Name }
     * 
     */
    public Name createName() {
        return new Name();
    }

    /**
     * Create an instance of {@link BitField }
     * 
     */
    public BitField createBitField() {
        return new BitField();
    }

    /**
     * Create an instance of {@link BuiltinOp }
     * 
     */
    public BuiltinOp createBuiltinOp() {
        return new BuiltinOp();
    }

    /**
     * Create an instance of {@link SubArrayRef }
     * 
     */
    public SubArrayRef createSubArrayRef() {
        return new SubArrayRef();
    }

    /**
     * Create an instance of {@link IndexRange }
     * 
     */
    public IndexRange createIndexRange() {
        return new IndexRange();
    }

    /**
     * Create an instance of {@link LowerBound }
     * 
     */
    public LowerBound createLowerBound() {
        return new LowerBound();
    }

    /**
     * Create an instance of {@link CoArrayRef }
     * 
     */
    public CoArrayRef createCoArrayRef() {
        return new CoArrayRef();
    }

    /**
     * Create an instance of {@link CoArrayAssignExpr }
     * 
     */
    public CoArrayAssignExpr createCoArrayAssignExpr() {
        return new CoArrayAssignExpr();
    }

    /**
     * Create an instance of {@link UpperBound }
     * 
     */
    public UpperBound createUpperBound() {
        return new UpperBound();
    }

    /**
     * Create an instance of {@link Step }
     * 
     */
    public Step createStep() {
        return new Step();
    }

    /**
     * Create an instance of {@link TypeName }
     * 
     */
    public TypeName createTypeName() {
        return new TypeName();
    }

    /**
     * Create an instance of {@link GccMemberDesignator }
     * 
     */
    public GccMemberDesignator createGccMemberDesignator() {
        return new GccMemberDesignator();
    }

    /**
     * Create an instance of {@link GccAttributes }
     * 
     */
    public GccAttributes createGccAttributes() {
        return new GccAttributes();
    }

    /**
     * Create an instance of {@link GccAttribute }
     * 
     */
    public GccAttribute createGccAttribute() {
        return new GccAttribute();
    }

    /**
     * Create an instance of {@link Pragma }
     * 
     */
    public Pragma createPragma() {
        return new Pragma();
    }

    /**
     * Create an instance of {@link Text }
     * 
     */
    public Text createText() {
        return new Text();
    }

    /**
     * Create an instance of {@link Declarations }
     * 
     */
    public Declarations createDeclarations() {
        return new Declarations();
    }

    /**
     * Create an instance of {@link FunctionDefinition }
     * 
     */
    public FunctionDefinition createFunctionDefinition() {
        return new FunctionDefinition();
    }

    /**
     * Create an instance of {@link Params }
     * 
     */
    public Params createParams() {
        return new Params();
    }

    /**
     * Create an instance of {@link Body }
     * 
     */
    public Body createBody() {
        return new Body();
    }

    /**
     * Create an instance of {@link ExprStatement }
     * 
     */
    public ExprStatement createExprStatement() {
        return new ExprStatement();
    }

    /**
     * Create an instance of {@link IfStatement }
     * 
     */
    public IfStatement createIfStatement() {
        return new IfStatement();
    }

    /**
     * Create an instance of {@link Condition }
     * 
     */
    public Condition createCondition() {
        return new Condition();
    }

    /**
     * Create an instance of {@link Then }
     * 
     */
    public Then createThen() {
        return new Then();
    }

    /**
     * Create an instance of {@link WhileStatement }
     * 
     */
    public WhileStatement createWhileStatement() {
        return new WhileStatement();
    }

    /**
     * Create an instance of {@link DoStatement }
     * 
     */
    public DoStatement createDoStatement() {
        return new DoStatement();
    }

    /**
     * Create an instance of {@link ForStatement }
     * 
     */
    public ForStatement createForStatement() {
        return new ForStatement();
    }

    /**
     * Create an instance of {@link Init }
     * 
     */
    public Init createInit() {
        return new Init();
    }

    /**
     * Create an instance of {@link Iter }
     * 
     */
    public Iter createIter() {
        return new Iter();
    }

    /**
     * Create an instance of {@link BreakStatement }
     * 
     */
    public BreakStatement createBreakStatement() {
        return new BreakStatement();
    }

    /**
     * Create an instance of {@link ContinueStatement }
     * 
     */
    public ContinueStatement createContinueStatement() {
        return new ContinueStatement();
    }

    /**
     * Create an instance of {@link ReturnStatement }
     * 
     */
    public ReturnStatement createReturnStatement() {
        return new ReturnStatement();
    }

    /**
     * Create an instance of {@link GotoStatement }
     * 
     */
    public GotoStatement createGotoStatement() {
        return new GotoStatement();
    }

    /**
     * Create an instance of {@link StatementLabel }
     * 
     */
    public StatementLabel createStatementLabel() {
        return new StatementLabel();
    }

    /**
     * Create an instance of {@link SwitchStatement }
     * 
     */
    public SwitchStatement createSwitchStatement() {
        return new SwitchStatement();
    }

    /**
     * Create an instance of {@link CaseLabel }
     * 
     */
    public CaseLabel createCaseLabel() {
        return new CaseLabel();
    }

    /**
     * Create an instance of {@link DefaultLabel }
     * 
     */
    public DefaultLabel createDefaultLabel() {
        return new DefaultLabel();
    }

    /**
     * Create an instance of {@link GccRangedCaseLabel }
     * 
     */
    public GccRangedCaseLabel createGccRangedCaseLabel() {
        return new GccRangedCaseLabel();
    }

    /**
     * Create an instance of {@link GccAsmStatement }
     * 
     */
    public GccAsmStatement createGccAsmStatement() {
        return new GccAsmStatement();
    }

    /**
     * Create an instance of {@link GccAsmOperands }
     * 
     */
    public GccAsmOperands createGccAsmOperands() {
        return new GccAsmOperands();
    }

    /**
     * Create an instance of {@link GccAsmOperand }
     * 
     */
    public GccAsmOperand createGccAsmOperand() {
        return new GccAsmOperand();
    }

    /**
     * Create an instance of {@link GccAsmClobbers }
     * 
     */
    public GccAsmClobbers createGccAsmClobbers() {
        return new GccAsmClobbers();
    }

    /**
     * Create an instance of {@link Else }
     * 
     */
    public Else createElse() {
        return new Else();
    }

    /**
     * Create an instance of {@link VarDecl }
     * 
     */
    public VarDecl createVarDecl() {
        return new VarDecl();
    }

    /**
     * Create an instance of {@link GccAsm }
     * 
     */
    public GccAsm createGccAsm() {
        return new GccAsm();
    }

    /**
     * Create an instance of {@link GccAsmExpression }
     * 
     */
    public GccAsmExpression createGccAsmExpression() {
        return new GccAsmExpression();
    }

    /**
     * Create an instance of {@link FunctionDecl }
     * 
     */
    public FunctionDecl createFunctionDecl() {
        return new FunctionDecl();
    }

    /**
     * Create an instance of {@link DesignatedValue }
     * 
     */
    public DesignatedValue createDesignatedValue() {
        return new DesignatedValue();
    }

    /**
     * Create an instance of {@link Arguments }
     * 
     */
    public Arguments createArguments() {
        return new Arguments();
    }

    /**
     * Create an instance of {@link ArrayType }
     * 
     */
    public ArrayType createArrayType() {
        return new ArrayType();
    }

    /**
     * Create an instance of {@link BaseType }
     * 
     */
    public BaseType createBaseType() {
        return new BaseType();
    }

    /**
     * Create an instance of {@link ArraySize }
     * 
     */
    public ArraySize createArraySize() {
        return new ArraySize();
    }

    /**
     * Create an instance of {@link GccAsmDefinition }
     * 
     */
    public GccAsmDefinition createGccAsmDefinition() {
        return new GccAsmDefinition();
    }

    /**
     * Create an instance of {@link UnionType }
     * 
     */
    public UnionType createUnionType() {
        return new UnionType();
    }

    /**
     * Create an instance of {@link FunctionType }
     * 
     */
    public FunctionType createFunctionType() {
        return new FunctionType();
    }

    /**
     * Create an instance of {@link EnumType }
     * 
     */
    public EnumType createEnumType() {
        return new EnumType();
    }

    /**
     * Create an instance of {@link XcodeProgram }
     * 
     */
    public XcodeProgram createXcodeProgram() {
        return new XcodeProgram();
    }

    /**
     * Create an instance of {@link TypeTable }
     * 
     */
    public TypeTable createTypeTable() {
        return new TypeTable();
    }

    /**
     * Create an instance of {@link BasicType }
     * 
     */
    public BasicType createBasicType() {
        return new BasicType();
    }

    /**
     * Create an instance of {@link PointerType }
     * 
     */
    public PointerType createPointerType() {
        return new PointerType();
    }

    /**
     * Create an instance of {@link StructType }
     * 
     */
    public StructType createStructType() {
        return new StructType();
    }

    /**
     * Create an instance of {@link CoArrayType }
     * 
     */
    public CoArrayType createCoArrayType() {
        return new CoArrayType();
    }

    /**
     * Create an instance of {@link GlobalSymbols }
     * 
     */
    public GlobalSymbols createGlobalSymbols() {
        return new GlobalSymbols();
    }

    /**
     * Create an instance of {@link GlobalDeclarations }
     * 
     */
    public GlobalDeclarations createGlobalDeclarations() {
        return new GlobalDeclarations();
    }

    /**
     * Create an instance of {@link CompoundLiteral }
     * 
     */
    public CompoundLiteral createCompoundLiteral() {
        return new CompoundLiteral();
    }

    /**
     * Create an instance of {@link CompoundValue.Value }
     * 
     */
    public CompoundValue.Value createCompoundValueValue() {
        return new CompoundValue.Value();
    }

}

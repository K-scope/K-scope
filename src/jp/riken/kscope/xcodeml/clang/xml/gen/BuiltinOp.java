//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, v2.2.4-2 
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2015.01.08 at 01:05:45 AM JST 
//


package jp.riken.kscope.xcodeml.clang.xml.gen;

import java.util.ArrayList;
import java.util.List;

import javax.xml.bind.annotation.XmlAccessType;
import javax.xml.bind.annotation.XmlAccessorType;
import javax.xml.bind.annotation.XmlAttribute;
import javax.xml.bind.annotation.XmlElement;
import javax.xml.bind.annotation.XmlElements;
import javax.xml.bind.annotation.XmlRootElement;
import javax.xml.bind.annotation.XmlType;
import javax.xml.bind.annotation.adapters.CollapsedStringAdapter;
import javax.xml.bind.annotation.adapters.XmlJavaTypeAdapter;

import jp.riken.kscope.xcodeml.clang.xml.*;



/**
 * <p>Java class for anonymous complex type.
 * 
 * <p>The following schema fragment specifies the expected content contained within this class.
 * 
 * <pre>
 * &lt;complexType>
 *   &lt;complexContent>
 *     &lt;restriction base="{http://www.w3.org/2001/XMLSchema}anyType">
 *       &lt;choice maxOccurs="unbounded" minOccurs="0">
 *         &lt;group ref="{}expressions"/>
 *         &lt;element ref="{}typeName"/>
 *         &lt;element ref="{}gccMemberDesignator"/>
 *       &lt;/choice>
 *       &lt;attGroup ref="{}BaseExpression"/>
 *       &lt;attribute name="name" use="required" type="{http://www.w3.org/2001/XMLSchema}string" />
 *       &lt;attribute name="is_id">
 *         &lt;simpleType>
 *           &lt;restriction base="{http://www.w3.org/2001/XMLSchema}token">
 *             &lt;enumeration value="0"/>
 *             &lt;enumeration value="1"/>
 *             &lt;enumeration value="true"/>
 *             &lt;enumeration value="false"/>
 *           &lt;/restriction>
 *         &lt;/simpleType>
 *       &lt;/attribute>
 *       &lt;attribute name="is_addrOf">
 *         &lt;simpleType>
 *           &lt;restriction base="{http://www.w3.org/2001/XMLSchema}token">
 *             &lt;enumeration value="0"/>
 *             &lt;enumeration value="1"/>
 *             &lt;enumeration value="true"/>
 *             &lt;enumeration value="false"/>
 *           &lt;/restriction>
 *         &lt;/simpleType>
 *       &lt;/attribute>
 *     &lt;/restriction>
 *   &lt;/complexContent>
 * &lt;/complexType>
 * </pre>
 * 
 * 
 */
@XmlAccessorType(XmlAccessType.FIELD)
@XmlType(name = "", propOrder = {
    "intConstantOrFloatConstantOrLonglongConstant"
})
@XmlRootElement(name = "builtin_op")
public class BuiltinOp implements IXmlNode
{

    @XmlElements({
        @XmlElement(name = "intConstant", type = IntConstant.class),
        @XmlElement(name = "floatConstant", type = FloatConstant.class),
        @XmlElement(name = "longlongConstant", type = LonglongConstant.class),
        @XmlElement(name = "stringConstant", type = StringConstant.class),
        @XmlElement(name = "moeConstant", type = MoeConstant.class),
        @XmlElement(name = "funcAddr", type = FuncAddr.class),
        @XmlElement(name = "pointerRef", type = PointerRef.class),
        @XmlElement(name = "Var", type = Var.class),
        @XmlElement(name = "varAddr", type = VarAddr.class),
        @XmlElement(name = "arrayRef", type = ArrayRef.class),
        @XmlElement(name = "arrayAddr", type = ArrayAddr.class),
        @XmlElement(name = "memberAddr", type = MemberAddr.class),
        @XmlElement(name = "memberRef", type = MemberRef.class),
        @XmlElement(name = "memberArrayRef", type = MemberArrayRef.class),
        @XmlElement(name = "memberArrayAddr", type = MemberArrayAddr.class),
        @XmlElement(name = "assignExpr", type = AssignExpr.class),
        @XmlElement(name = "plusExpr", type = PlusExpr.class),
        @XmlElement(name = "minusExpr", type = MinusExpr.class),
        @XmlElement(name = "mulExpr", type = MulExpr.class),
        @XmlElement(name = "divExpr", type = DivExpr.class),
        @XmlElement(name = "modExpr", type = ModExpr.class),
        @XmlElement(name = "LshiftExpr", type = LshiftExpr.class),
        @XmlElement(name = "RshiftExpr", type = RshiftExpr.class),
        @XmlElement(name = "bitAndExpr", type = BitAndExpr.class),
        @XmlElement(name = "bitOrExpr", type = BitOrExpr.class),
        @XmlElement(name = "bitXorExpr", type = BitXorExpr.class),
        @XmlElement(name = "asgPlusExpr", type = AsgPlusExpr.class),
        @XmlElement(name = "asgMinusExpr", type = AsgMinusExpr.class),
        @XmlElement(name = "asgMulExpr", type = AsgMulExpr.class),
        @XmlElement(name = "asgDivExpr", type = AsgDivExpr.class),
        @XmlElement(name = "asgModExpr", type = AsgModExpr.class),
        @XmlElement(name = "asgLshiftExpr", type = AsgLshiftExpr.class),
        @XmlElement(name = "asgRshiftExpr", type = AsgRshiftExpr.class),
        @XmlElement(name = "asgBitAndExpr", type = AsgBitAndExpr.class),
        @XmlElement(name = "asgBitOrExpr", type = AsgBitOrExpr.class),
        @XmlElement(name = "asgBitXorExpr", type = AsgBitXorExpr.class),
        @XmlElement(name = "logEQExpr", type = LogEQExpr.class),
        @XmlElement(name = "logNEQExpr", type = LogNEQExpr.class),
        @XmlElement(name = "logGEExpr", type = LogGEExpr.class),
        @XmlElement(name = "logGTExpr", type = LogGTExpr.class),
        @XmlElement(name = "logLEExpr", type = LogLEExpr.class),
        @XmlElement(name = "logLTExpr", type = LogLTExpr.class),
        @XmlElement(name = "logAndExpr", type = LogAndExpr.class),
        @XmlElement(name = "logOrExpr", type = LogOrExpr.class),
        @XmlElement(name = "unaryMinusExpr", type = UnaryMinusExpr.class),
        @XmlElement(name = "bitNotExpr", type = BitNotExpr.class),
        @XmlElement(name = "logNotExpr", type = LogNotExpr.class),
        @XmlElement(name = "functionCall", type = FunctionCall.class),
        @XmlElement(name = "commaExpr", type = CommaExpr.class),
        @XmlElement(name = "postIncrExpr", type = PostIncrExpr.class),
        @XmlElement(name = "postDecrExpr", type = PostDecrExpr.class),
        @XmlElement(name = "preIncrExpr", type = PreIncrExpr.class),
        @XmlElement(name = "preDecrExpr", type = PreDecrExpr.class),
        @XmlElement(name = "castExpr", type = CastExpr.class),
        @XmlElement(name = "condExpr", type = CondExpr.class),
        @XmlElement(name = "sizeOfExpr", type = SizeOfExpr.class),
        @XmlElement(name = "addrOfExpr", type = AddrOfExpr.class),
        @XmlElement(name = "xmpDescOf", type = XmpDescOf.class),
        @XmlElement(name = "compoundValue", type = CompoundValueExpr.class),
        @XmlElement(name = "compoundValueAddr", type = CompoundValueAddr.class),
        @XmlElement(name = "gccAlignOfExpr", type = GccAlignOfExpr.class),
        @XmlElement(name = "gccLabelAddr", type = GccLabelAddr.class),
        @XmlElement(name = "gccCompoundExpr", type = GccCompoundExpr.class),
        @XmlElement(name = "builtin_op", type = BuiltinOp.class),
        @XmlElement(name = "subArrayRef", type = SubArrayRef.class),
        @XmlElement(name = "coArrayRef", type = CoArrayRef.class),
        @XmlElement(name = "coArrayAssignExpr", type = CoArrayAssignExpr.class),
        @XmlElement(name = "typeName", type = TypeName.class),
        @XmlElement(name = "gccMemberDesignator", type = GccMemberDesignator.class)
    })
    protected List<IXmlNode> intConstantOrFloatConstantOrLonglongConstant;
    @XmlAttribute(name = "name", required = true)
    protected String name;
    @XmlAttribute(name = "is_id")
    @XmlJavaTypeAdapter(CollapsedStringAdapter.class)
    protected String isId;
    @XmlAttribute(name = "is_addrOf")
    @XmlJavaTypeAdapter(CollapsedStringAdapter.class)
    protected String isAddrOf;
    @XmlAttribute(name = "type")
    protected String type;
    @XmlAttribute(name = "is_gccSyntax")
    @XmlJavaTypeAdapter(CollapsedStringAdapter.class)
    protected String isGccSyntax;
    @XmlAttribute(name = "is_modified")
    @XmlJavaTypeAdapter(CollapsedStringAdapter.class)
    protected String isModified;

    /**
     * Gets the value of the intConstantOrFloatConstantOrLonglongConstant property.
     * 
     * <p>
     * This accessor method returns a reference to the live list,
     * not a snapshot. Therefore any modification you make to the
     * returned list will be present inside the JAXB object.
     * This is why there is not a <CODE>set</CODE> method for the intConstantOrFloatConstantOrLonglongConstant property.
     * 
     * <p>
     * For example, to add a new item, do as follows:
     * <pre>
     *    getIntConstantOrFloatConstantOrLonglongConstant().add(newItem);
     * </pre>
     * 
     * 
     * <p>
     * Objects of the following type(s) are allowed in the list
     * {@link IntConstant }
     * {@link FloatConstant }
     * {@link LonglongConstant }
     * {@link StringConstant }
     * {@link MoeConstant }
     * {@link FuncAddr }
     * {@link PointerRef }
     * {@link Var }
     * {@link VarAddr }
     * {@link ArrayRef }
     * {@link ArrayAddr }
     * {@link MemberAddr }
     * {@link MemberRef }
     * {@link MemberArrayRef }
     * {@link MemberArrayAddr }
     * {@link AssignExpr }
     * {@link PlusExpr }
     * {@link MinusExpr }
     * {@link MulExpr }
     * {@link DivExpr }
     * {@link ModExpr }
     * {@link LshiftExpr }
     * {@link RshiftExpr }
     * {@link BitAndExpr }
     * {@link BitOrExpr }
     * {@link BitXorExpr }
     * {@link AsgPlusExpr }
     * {@link AsgMinusExpr }
     * {@link AsgMulExpr }
     * {@link AsgDivExpr }
     * {@link AsgModExpr }
     * {@link AsgLshiftExpr }
     * {@link AsgRshiftExpr }
     * {@link AsgBitAndExpr }
     * {@link AsgBitOrExpr }
     * {@link AsgBitXorExpr }
     * {@link LogEQExpr }
     * {@link LogNEQExpr }
     * {@link LogGEExpr }
     * {@link LogGTExpr }
     * {@link LogLEExpr }
     * {@link LogLTExpr }
     * {@link LogAndExpr }
     * {@link LogOrExpr }
     * {@link UnaryMinusExpr }
     * {@link BitNotExpr }
     * {@link LogNotExpr }
     * {@link FunctionCall }
     * {@link CommaExpr }
     * {@link PostIncrExpr }
     * {@link PostDecrExpr }
     * {@link PreIncrExpr }
     * {@link PreDecrExpr }
     * {@link CastExpr }
     * {@link CondExpr }
     * {@link SizeOfExpr }
     * {@link AddrOfExpr }
     * {@link XmpDescOf }
     * {@link CompoundValueExpr }
     * {@link CompoundValueAddr }
     * {@link GccAlignOfExpr }
     * {@link GccLabelAddr }
     * {@link GccCompoundExpr }
     * {@link BuiltinOp }
     * {@link SubArrayRef }
     * {@link CoArrayRef }
     * {@link CoArrayAssignExpr }
     * {@link TypeName }
     * {@link GccMemberDesignator }
     * 
     * 
     */
    public List<IXmlNode> getIntConstantOrFloatConstantOrLonglongConstant() {
        if (intConstantOrFloatConstantOrLonglongConstant == null) {
            intConstantOrFloatConstantOrLonglongConstant = new ArrayList<IXmlNode>();
        }
        return this.intConstantOrFloatConstantOrLonglongConstant;
    }

    /**
     * Gets the value of the name property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    public String getName() {
        return name;
    }

    /**
     * Sets the value of the name property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setName(String value) {
        this.name = value;
    }

    /**
     * Gets the value of the isId property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    public String getIsId() {
        return isId;
    }

    /**
     * Sets the value of the isId property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setIsId(String value) {
        this.isId = value;
    }

    /**
     * Gets the value of the isAddrOf property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    public String getIsAddrOf() {
        return isAddrOf;
    }

    /**
     * Sets the value of the isAddrOf property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setIsAddrOf(String value) {
        this.isAddrOf = value;
    }

    /**
     * Gets the value of the type property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    public String getType() {
        return type;
    }

    /**
     * Sets the value of the type property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setType(String value) {
        this.type = value;
    }

    /**
     * Gets the value of the isGccSyntax property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    public String getIsGccSyntax() {
        return isGccSyntax;
    }

    /**
     * Sets the value of the isGccSyntax property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setIsGccSyntax(String value) {
        this.isGccSyntax = value;
    }

    /**
     * Gets the value of the isModified property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    public String getIsModified() {
        return isModified;
    }

    /**
     * Sets the value of the isModified property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setIsModified(String value) {
        this.isModified = value;
    }



	@Override
	public boolean enter(jp.riken.kscope.xcodeml.clang.xml.IXmlVisitor visitor) {
        return (visitor.enter(this));
	}

	@Override
	public void leave(jp.riken.kscope.xcodeml.clang.xml.IXmlVisitor visitor) {
        visitor.leave(this);
	}
}

//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, v2.2.4-2 
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2014.12.31 at 03:23:31 AM JST 
//


package jp.riken.kscope.xcodeml.fortran.xml.gen;

import java.util.ArrayList;
import java.util.List;

import javax.xml.bind.annotation.XmlAccessType;
import javax.xml.bind.annotation.XmlAccessorType;
import javax.xml.bind.annotation.XmlAttribute;
import javax.xml.bind.annotation.XmlElementRef;
import javax.xml.bind.annotation.XmlElementRefs;
import javax.xml.bind.annotation.XmlSeeAlso;
import javax.xml.bind.annotation.XmlType;

import jp.riken.kscope.xcodeml.fortran.xml.IDefModelExpr;
import jp.riken.kscope.xcodeml.fortran.xml.IXmlNode;
import jp.riken.kscope.xcodeml.fortran.xml.IXmlVisitor;


/**
 * <p>Java class for defAssignStatement complex type.
 * 
 * <p>The following schema fragment specifies the expected content contained within this class.
 * 
 * <pre>
 * &lt;complexType name="defAssignStatement">
 *   &lt;complexContent>
 *     &lt;restriction base="{http://www.w3.org/2001/XMLSchema}anyType">
 *       &lt;sequence>
 *         &lt;choice>
 *           &lt;element ref="{}Var"/>
 *           &lt;element ref="{}FarrayRef"/>
 *           &lt;element ref="{}FcharacterRef"/>
 *           &lt;element ref="{}FmemberRef"/>
 *           &lt;element ref="{}FcoArrayRef"/>
 *         &lt;/choice>
 *         &lt;group ref="{}defModelExpr"/>
 *       &lt;/sequence>
 *       &lt;attGroup ref="{}defAttrSourceLine"/>
 *     &lt;/restriction>
 *   &lt;/complexContent>
 * &lt;/complexType>
 * </pre>
 * 
 * 
 */
@XmlAccessorType(XmlAccessType.FIELD)
@XmlType(name = "defAssignStatement", propOrder = {
    "content"
})
@XmlSeeAlso({
    FpointerAssignStatement.class,
    FassignStatement.class
})
public class DefAssignStatement implements jp.riken.kscope.xcodeml.fortran.xml.IDefBaseStatement, IXmlNode
{
    @XmlElementRefs({
        @XmlElementRef(name = "FdoLoop", type = FdoLoop.class, required = false),
        @XmlElementRef(name = "logEQVExpr", type = LogEQVExpr.class, required = false),
        @XmlElementRef(name = "mulExpr", type = MulExpr.class, required = false),
        @XmlElementRef(name = "FpowerExpr", type = FpowerExpr.class, required = false),
        @XmlElementRef(name = "FrealConstant", type = FrealConstant.class, required = false),
        @XmlElementRef(name = "FarrayRef", type = FarrayRef.class, required = false),
        @XmlElementRef(name = "divExpr", type = DivExpr.class, required = false),
        @XmlElementRef(name = "FcharacterRef", type = FcharacterRef.class, required = false),
        @XmlElementRef(name = "logLEExpr", type = LogLEExpr.class, required = false),
        @XmlElementRef(name = "FmemberRef", type = FmemberRef.class, required = false),
        @XmlElementRef(name = "functionCall", type = FunctionCall.class, required = false),
        @XmlElementRef(name = "logNotExpr", type = LogNotExpr.class, required = false),
        @XmlElementRef(name = "logOrExpr", type = LogOrExpr.class, required = false),
        @XmlElementRef(name = "logLTExpr", type = LogLTExpr.class, required = false),
        @XmlElementRef(name = "FintConstant", type = FintConstant.class, required = false),
        @XmlElementRef(name = "FstructConstructor", type = FstructConstructor.class, required = false),
        @XmlElementRef(name = "logGTExpr", type = LogGTExpr.class, required = false),
        @XmlElementRef(name = "FarrayConstructor", type = FarrayConstructor.class, required = false),
        @XmlElementRef(name = "userUnaryExpr", type = UserUnaryExpr.class, required = false),
        @XmlElementRef(name = "FcharacterConstant", type = FcharacterConstant.class, required = false),
        @XmlElementRef(name = "plusExpr", type = PlusExpr.class, required = false),
        @XmlElementRef(name = "minusExpr", type = MinusExpr.class, required = false),
        @XmlElementRef(name = "logAndExpr", type = LogAndExpr.class, required = false),
        @XmlElementRef(name = "varRef", type = VarRef.class, required = false),
        @XmlElementRef(name = "logGEExpr", type = LogGEExpr.class, required = false),
        @XmlElementRef(name = "logNEQVExpr", type = LogNEQVExpr.class, required = false),
        @XmlElementRef(name = "unaryMinusExpr", type = UnaryMinusExpr.class, required = false),
        @XmlElementRef(name = "FlogicalConstant", type = FlogicalConstant.class, required = false),
        @XmlElementRef(name = "logNEQExpr", type = LogNEQExpr.class, required = false),
        @XmlElementRef(name = "Var", type = Var.class, required = false),
        @XmlElementRef(name = "FconcatExpr", type = FconcatExpr.class, required = false),
        @XmlElementRef(name = "FcoArrayRef", type = FcoArrayRef.class, required = false),
        @XmlElementRef(name = "FcomplexConstant", type = FcomplexConstant.class, required = false),
        @XmlElementRef(name = "userBinaryExpr", type = UserBinaryExpr.class, required = false),
        @XmlElementRef(name = "logEQExpr", type = LogEQExpr.class, required = false)
    })
    protected List<IXmlNode> content;
    @XmlAttribute(name = "lineno")
    protected String lineno;
    @XmlAttribute(name = "endlineno")
    protected String endlineno;
    @XmlAttribute(name = "rawlineno")
    protected String rawlineno;
    @XmlAttribute(name = "file")
    protected String file;

    /**
     * Gets the rest of the content model. 
     * 
     * <p>
     * You are getting this "catch-all" property because of the following reason: 
     * The field name "Var" is used by two different parts of a schema. See: 
     * line 187 of file:/home/hira/hira_works/feast/kscope/src/kscope_project/jaxb_generator/xcodeml_f_modify.xsd
     * line 935 of file:/home/hira/hira_works/feast/kscope/src/kscope_project/jaxb_generator/xcodeml_f_modify.xsd
     * <p>
     * To get rid of this property, apply a property customization to one 
     * of both of the following declarations to change their names: 
     * Gets the value of the content property.
     * 
     * <p>
     * This accessor method returns a reference to the live list,
     * not a snapshot. Therefore any modification you make to the
     * returned list will be present inside the JAXB object.
     * This is why there is not a <CODE>set</CODE> method for the content property.
     * 
     * <p>
     * For example, to add a new item, do as follows:
     * <pre>
     *    getContent().add(newItem);
     * </pre>
     * 
     * 
     * <p>
     * Objects of the following type(s) are allowed in the list
     * {@link FdoLoop }
     * {@link MulExpr }
     * {@link LogEQVExpr }
     * {@link FpowerExpr }
     * {@link FrealConstant }
     * {@link FarrayRef }
     * {@link DivExpr }
     * {@link FcharacterRef }
     * {@link FmemberRef }
     * {@link LogLEExpr }
     * {@link FunctionCall }
     * {@link LogNotExpr }
     * {@link LogOrExpr }
     * {@link FintConstant }
     * {@link LogLTExpr }
     * {@link LogGTExpr }
     * {@link FstructConstructor }
     * {@link FarrayConstructor }
     * {@link MinusExpr }
     * {@link PlusExpr }
     * {@link FcharacterConstant }
     * {@link UserUnaryExpr }
     * {@link LogAndExpr }
     * {@link VarRef }
     * {@link LogGEExpr }
     * {@link LogNEQVExpr }
     * {@link UnaryMinusExpr }
     * {@link FlogicalConstant }
     * {@link LogNEQExpr }
     * {@link Var }
     * {@link FconcatExpr }
     * {@link FcoArrayRef }
     * {@link FcomplexConstant }
     * {@link LogEQExpr }
     * {@link UserBinaryExpr }
     * 
     * 
     */
    public List<IXmlNode> getContent() {
        if (content == null) {
            content = new ArrayList<IXmlNode>();
        }
        return this.content;
    }

    /**
     * Gets the value of the lineno property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    public String getLineno() {
        return lineno;
    }

    /**
     * Sets the value of the lineno property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setLineno(String value) {
        this.lineno = value;
    }

    /**
     * Gets the value of the endlineno property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    public String getEndlineno() {
        return endlineno;
    }

    /**
     * Sets the value of the endlineno property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setEndlineno(String value) {
        this.endlineno = value;
    }

    /**
     * Gets the value of the rawlineno property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    public String getRawlineno() {
        return rawlineno;
    }

    /**
     * Sets the value of the rawlineno property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setRawlineno(String value) {
        this.rawlineno = value;
    }

    /**
     * Gets the value of the file property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    public String getFile() {
        return file;
    }

    /**
     * Sets the value of the file property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setFile(String value) {
        this.file = value;
    }

	@Override
	public boolean enter(IXmlVisitor visitor) {
		return true;
	}

	@Override
	public void leave(IXmlVisitor visitor) {
	}

}

//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, v2.2.4-2 
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2014.12.31 at 01:36:45 AM JST 
//


package jp.riken.kscope.xcodeml.fortran.xml.gen;

import java.util.ArrayList;
import java.util.List;

import javax.xml.bind.annotation.XmlAccessType;
import javax.xml.bind.annotation.XmlAccessorType;
import javax.xml.bind.annotation.XmlElement;
import javax.xml.bind.annotation.XmlElements;
import javax.xml.bind.annotation.XmlRootElement;
import javax.xml.bind.annotation.XmlType;

import jp.riken.kscope.xcodeml.fortran.xml.IXmlNode;


/**
 * <p>Java class for anonymous complex type.
 * 
 * <p>The following schema fragment specifies the expected content contained within this class.
 * 
 * <pre>
 * &lt;complexType>
 *   &lt;complexContent>
 *     &lt;restriction base="{http://www.w3.org/2001/XMLSchema}anyType">
 *       &lt;group ref="{}defModelStatement" maxOccurs="unbounded" minOccurs="0"/>
 *     &lt;/restriction>
 *   &lt;/complexContent>
 * &lt;/complexType>
 * </pre>
 * 
 * 
 */
@XmlAccessorType(XmlAccessType.FIELD)
@XmlType(name = "", propOrder = {
    "defModelStatement"
})
@XmlRootElement(name = "body")
public class Body
    implements IXmlNode
{

    @XmlElements({
        @XmlElement(name = "FassignStatement", type = FassignStatement.class),
        @XmlElement(name = "exprStatement", type = ExprStatement.class),
        @XmlElement(name = "FpointerAssignStatement", type = FpointerAssignStatement.class),
        @XmlElement(name = "FifStatement", type = FifStatement.class),
        @XmlElement(name = "FdoStatement", type = FdoStatement.class),
        @XmlElement(name = "FdoWhileStatement", type = FdoWhileStatement.class),
        @XmlElement(name = "continueStatement", type = ContinueStatement.class),
        @XmlElement(name = "FcycleStatement", type = FcycleStatement.class),
        @XmlElement(name = "FexitStatement", type = FexitStatement.class),
        @XmlElement(name = "FreturnStatement", type = FreturnStatement.class),
        @XmlElement(name = "gotoStatement", type = GotoStatement.class),
        @XmlElement(name = "statementLabel", type = StatementLabel.class),
        @XmlElement(name = "FselectCaseStatement", type = FselectCaseStatement.class),
        @XmlElement(name = "FcaseLabel", type = FcaseLabel.class),
        @XmlElement(name = "FwhereStatement", type = FwhereStatement.class),
        @XmlElement(name = "FstopStatement", type = FstopStatement.class),
        @XmlElement(name = "FpauseStatement", type = FpauseStatement.class),
        @XmlElement(name = "FreadStatement", type = FreadStatement.class),
        @XmlElement(name = "FwriteStatement", type = FwriteStatement.class),
        @XmlElement(name = "FprintStatement", type = FprintStatement.class),
        @XmlElement(name = "FrewindStatement", type = FrewindStatement.class),
        @XmlElement(name = "FendFileStatement", type = FendFileStatement.class),
        @XmlElement(name = "FbackspaceStatement", type = FbackspaceStatement.class),
        @XmlElement(name = "FopenStatement", type = FopenStatement.class),
        @XmlElement(name = "FcloseStatement", type = FcloseStatement.class),
        @XmlElement(name = "FinquireStatement", type = FinquireStatement.class),
        @XmlElement(name = "FformatDecl", type = FformatDecl.class),
        @XmlElement(name = "FdataDecl", type = FdataDecl.class),
        @XmlElement(name = "FentryDecl", type = FentryDecl.class),
        @XmlElement(name = "FallocateStatement", type = FallocateStatement.class),
        @XmlElement(name = "FdeallocateStatement", type = FdeallocateStatement.class),
        @XmlElement(name = "FnullifyStatement", type = FnullifyStatement.class),
        @XmlElement(name = "FpragmaStatement", type = FpragmaStatement.class),
        @XmlElement(name = "FcontainsStatement", type = FcontainsStatement.class),
        @XmlElement(name = "text", type = Text.class)
    })
    protected List<IXmlNode> defModelStatement;

    /**
     * Gets the value of the defModelStatement property.
     * 
     * <p>
     * This accessor method returns a reference to the live list,
     * not a snapshot. Therefore any modification you make to the
     * returned list will be present inside the JAXB object.
     * This is why there is not a <CODE>set</CODE> method for the defModelStatement property.
     * 
     * <p>
     * For example, to add a new item, do as follows:
     * <pre>
     *    getDefModelStatement().add(newItem);
     * </pre>
     * 
     * 
     * <p>
     * Objects of the following type(s) are allowed in the list
     * {@link FassignStatement }
     * {@link ExprStatement }
     * {@link FpointerAssignStatement }
     * {@link FifStatement }
     * {@link FdoStatement }
     * {@link FdoWhileStatement }
     * {@link ContinueStatement }
     * {@link FcycleStatement }
     * {@link FexitStatement }
     * {@link FreturnStatement }
     * {@link GotoStatement }
     * {@link StatementLabel }
     * {@link FselectCaseStatement }
     * {@link FcaseLabel }
     * {@link FwhereStatement }
     * {@link FstopStatement }
     * {@link FpauseStatement }
     * {@link FreadStatement }
     * {@link FwriteStatement }
     * {@link FprintStatement }
     * {@link FrewindStatement }
     * {@link FendFileStatement }
     * {@link FbackspaceStatement }
     * {@link FopenStatement }
     * {@link FcloseStatement }
     * {@link FinquireStatement }
     * {@link FformatDecl }
     * {@link FdataDecl }
     * {@link FentryDecl }
     * {@link FallocateStatement }
     * {@link FdeallocateStatement }
     * {@link FnullifyStatement }
     * {@link FpragmaStatement }
     * {@link FcontainsStatement }
     * {@link Text }
     * 
     * 
     */
    public List<IXmlNode> getDefModelStatement() {
        if (defModelStatement == null) {
            defModelStatement = new ArrayList<IXmlNode>();
        }
        return this.defModelStatement;
    }



	@Override
	public boolean enter(jp.riken.kscope.xcodeml.fortran.xml.IXmlVisitor visitor) {
        return (visitor.enter(this));
	}

	@Override
	public void leave(jp.riken.kscope.xcodeml.fortran.xml.IXmlVisitor visitor) {
        visitor.leave(this);
	}
}

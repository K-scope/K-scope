//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, v2.2.4-2 
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2014.12.31 at 01:36:45 AM JST 
//


package jp.riken.kscope.xcodeml.fortran.xml.gen;

import java.util.ArrayList;
import java.util.List;

import javax.xml.bind.annotation.XmlAccessType;
import javax.xml.bind.annotation.XmlAccessorType;
import javax.xml.bind.annotation.XmlElement;
import javax.xml.bind.annotation.XmlElements;
import javax.xml.bind.annotation.XmlSeeAlso;
import javax.xml.bind.annotation.XmlType;

import jp.riken.kscope.xcodeml.fortran.xml.IXmlNode;




/**
 * <p>Java class for defModelExprList complex type.
 * 
 * <p>The following schema fragment specifies the expected content contained within this class.
 * 
 * <pre>
 * &lt;complexType name="defModelExprList">
 *   &lt;complexContent>
 *     &lt;restriction base="{http://www.w3.org/2001/XMLSchema}anyType">
 *       &lt;group ref="{}defModelExpr" maxOccurs="unbounded" minOccurs="0"/>
 *     &lt;/restriction>
 *   &lt;/complexContent>
 * &lt;/complexType>
 * </pre>
 * 
 * 
 */
@XmlAccessorType(XmlAccessType.FIELD)
@XmlType(name = "defModelExprList", propOrder = {
    "defModelExpr"
})
@XmlSeeAlso({
    FarrayConstructor.class,
    FstructConstructor.class
})
public class DefModelExprList implements IXmlNode
{

    @XmlElements({
        @XmlElement(name = "FintConstant", type = FintConstant.class),
        @XmlElement(name = "FrealConstant", type = FrealConstant.class),
        @XmlElement(name = "FcomplexConstant", type = FcomplexConstant.class),
        @XmlElement(name = "FcharacterConstant", type = FcharacterConstant.class),
        @XmlElement(name = "FlogicalConstant", type = FlogicalConstant.class),
        @XmlElement(name = "FarrayConstructor", type = FarrayConstructor.class),
        @XmlElement(name = "FstructConstructor", type = FstructConstructor.class),
        @XmlElement(name = "Var", type = Var.class),
        @XmlElement(name = "FarrayRef", type = FarrayRef.class),
        @XmlElement(name = "FcharacterRef", type = FcharacterRef.class),
        @XmlElement(name = "FmemberRef", type = FmemberRef.class),
        @XmlElement(name = "FcoArrayRef", type = FcoArrayRef.class),
        @XmlElement(name = "varRef", type = VarRef.class),
        @XmlElement(name = "functionCall", type = FunctionCall.class),
        @XmlElement(name = "plusExpr", type = PlusExpr.class),
        @XmlElement(name = "minusExpr", type = MinusExpr.class),
        @XmlElement(name = "mulExpr", type = MulExpr.class),
        @XmlElement(name = "divExpr", type = DivExpr.class),
        @XmlElement(name = "FpowerExpr", type = FpowerExpr.class),
        @XmlElement(name = "FconcatExpr", type = FconcatExpr.class),
        @XmlElement(name = "logEQExpr", type = LogEQExpr.class),
        @XmlElement(name = "logNEQExpr", type = LogNEQExpr.class),
        @XmlElement(name = "logGEExpr", type = LogGEExpr.class),
        @XmlElement(name = "logGTExpr", type = LogGTExpr.class),
        @XmlElement(name = "logLEExpr", type = LogLEExpr.class),
        @XmlElement(name = "logLTExpr", type = LogLTExpr.class),
        @XmlElement(name = "logAndExpr", type = LogAndExpr.class),
        @XmlElement(name = "logOrExpr", type = LogOrExpr.class),
        @XmlElement(name = "logEQVExpr", type = LogEQVExpr.class),
        @XmlElement(name = "logNEQVExpr", type = LogNEQVExpr.class),
        @XmlElement(name = "unaryMinusExpr", type = UnaryMinusExpr.class),
        @XmlElement(name = "logNotExpr", type = LogNotExpr.class),
        @XmlElement(name = "userBinaryExpr", type = UserBinaryExpr.class),
        @XmlElement(name = "userUnaryExpr", type = UserUnaryExpr.class),
        @XmlElement(name = "FdoLoop", type = FdoLoop.class)
    })
    protected List<IXmlNode> defModelExpr;

    /**
     * Gets the value of the defModelExpr property.
     * 
     * <p>
     * This accessor method returns a reference to the live list,
     * not a snapshot. Therefore any modification you make to the
     * returned list will be present inside the JAXB object.
     * This is why there is not a <CODE>set</CODE> method for the defModelExpr property.
     * 
     * <p>
     * For example, to add a new item, do as follows:
     * <pre>
     *    getDefModelExpr().add(newItem);
     * </pre>
     * 
     * 
     * <p>
     * Objects of the following type(s) are allowed in the list
     * {@link FintConstant }
     * {@link FrealConstant }
     * {@link FcomplexConstant }
     * {@link FcharacterConstant }
     * {@link FlogicalConstant }
     * {@link FarrayConstructor }
     * {@link FstructConstructor }
     * {@link Var }
     * {@link FarrayRef }
     * {@link FcharacterRef }
     * {@link FmemberRef }
     * {@link FcoArrayRef }
     * {@link VarRef }
     * {@link FunctionCall }
     * {@link PlusExpr }
     * {@link MinusExpr }
     * {@link MulExpr }
     * {@link DivExpr }
     * {@link FpowerExpr }
     * {@link FconcatExpr }
     * {@link LogEQExpr }
     * {@link LogNEQExpr }
     * {@link LogGEExpr }
     * {@link LogGTExpr }
     * {@link LogLEExpr }
     * {@link LogLTExpr }
     * {@link LogAndExpr }
     * {@link LogOrExpr }
     * {@link LogEQVExpr }
     * {@link LogNEQVExpr }
     * {@link UnaryMinusExpr }
     * {@link LogNotExpr }
     * {@link UserBinaryExpr }
     * {@link UserUnaryExpr }
     * {@link FdoLoop }
     * 
     * 
     */
    public List<IXmlNode> getDefModelExpr() {
        if (defModelExpr == null) {
            defModelExpr = new ArrayList<IXmlNode>();
        }
        return this.defModelExpr;
    }



	@Override
	public boolean enter(jp.riken.kscope.xcodeml.fortran.xml.IXmlVisitor visitor) {
        return (visitor.enter(this));
	}

	@Override
	public void leave(jp.riken.kscope.xcodeml.fortran.xml.IXmlVisitor visitor) {
        visitor.leave(this);
	}
}

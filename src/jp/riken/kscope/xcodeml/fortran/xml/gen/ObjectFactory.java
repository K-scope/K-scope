//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, v2.2.4-2 
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2014.12.31 at 01:36:45 AM JST 
//


package jp.riken.kscope.xcodeml.fortran.xml.gen;

import javax.xml.bind.annotation.XmlRegistry;


/**
 * This object contains factory methods for each 
 * Java content interface and Java element interface 
 * generated in the jp.riken.kscope.xcodeml.xml.fgen package. 
 * <p>An ObjectFactory allows you to programatically 
 * construct new instances of the Java representation 
 * for XML content. The Java representation of XML 
 * content can consist of schema derived interfaces 
 * and classes representing the binding of schema 
 * type definitions, element declarations and model 
 * groups.  Factory methods for each of these are 
 * provided in this class.
 * 
 */
@XmlRegistry
public class ObjectFactory {


    /**
     * Create a new ObjectFactory that can be used to create new instances of schema derived classes for package: jp.riken.kscope.xcodeml.xml.fgen
     * 
     */
    public ObjectFactory() {
    }

    /**
     * Create an instance of {@link FlogicalConstant }
     * 
     */
    public FlogicalConstant createFlogicalConstant() {
        return new FlogicalConstant();
    }

    /**
     * Create an instance of {@link FblockDataDefinition }
     * 
     */
    public FblockDataDefinition createFblockDataDefinition() {
        return new FblockDataDefinition();
    }

    /**
     * Create an instance of {@link Symbols }
     * 
     */
    public Symbols createSymbols() {
        return new Symbols();
    }

    /**
     * Create an instance of {@link Id }
     * 
     */
    public Id createId() {
        return new Id();
    }

    /**
     * Create an instance of {@link Name }
     * 
     */
    public Name createName() {
        return new Name();
    }

    /**
     * Create an instance of {@link Value }
     * 
     */
    public Value createValue() {
        return new Value();
    }

    /**
     * Create an instance of {@link FintConstant }
     * 
     */
    public FintConstant createFintConstant() {
        return new FintConstant();
    }

    /**
     * Create an instance of {@link FrealConstant }
     * 
     */
    public FrealConstant createFrealConstant() {
        return new FrealConstant();
    }

    /**
     * Create an instance of {@link FcomplexConstant }
     * 
     */
    public FcomplexConstant createFcomplexConstant() {
        return new FcomplexConstant();
    }

    /**
     * Create an instance of {@link FcharacterConstant }
     * 
     */
    public FcharacterConstant createFcharacterConstant() {
        return new FcharacterConstant();
    }

    /**
     * Create an instance of {@link FarrayConstructor }
     * 
     */
    public FarrayConstructor createFarrayConstructor() {
        return new FarrayConstructor();
    }

    /**
     * Create an instance of {@link DefModelExprList }
     * 
     */
    public DefModelExprList createDefModelExprList() {
        return new DefModelExprList();
    }

    /**
     * Create an instance of {@link FstructConstructor }
     * 
     */
    public FstructConstructor createFstructConstructor() {
        return new FstructConstructor();
    }

    /**
     * Create an instance of {@link Var }
     * 
     */
    public Var createVar() {
        return new Var();
    }

    /**
     * Create an instance of {@link FarrayRef }
     * 
     */
    public FarrayRef createFarrayRef() {
        return new FarrayRef();
    }

    /**
     * Create an instance of {@link VarRef }
     * 
     */
    public VarRef createVarRef() {
        return new VarRef();
    }

    /**
     * Create an instance of {@link DefModelLValue }
     * 
     */
    public DefModelLValue createDefModelLValue() {
        return new DefModelLValue();
    }

    /**
     * Create an instance of {@link FcharacterRef }
     * 
     */
    public FcharacterRef createFcharacterRef() {
        return new FcharacterRef();
    }

    /**
     * Create an instance of {@link IndexRange }
     * 
     */
    public IndexRange createIndexRange() {
        return new IndexRange();
    }

    /**
     * Create an instance of {@link LowerBound }
     * 
     */
    public LowerBound createLowerBound() {
        return new LowerBound();
    }

    /**
     * Create an instance of {@link FmemberRef }
     * 
     */
    public FmemberRef createFmemberRef() {
        return new FmemberRef();
    }

    /**
     * Create an instance of {@link FcoArrayRef }
     * 
     */
    public FcoArrayRef createFcoArrayRef() {
        return new FcoArrayRef();
    }

    /**
     * Create an instance of {@link ArrayIndex }
     * 
     */
    public ArrayIndex createArrayIndex() {
        return new ArrayIndex();
    }

    /**
     * Create an instance of {@link FunctionCall }
     * 
     */
    public FunctionCall createFunctionCall() {
        return new FunctionCall();
    }

    /**
     * Create an instance of {@link Arguments }
     * 
     */
    public Arguments createArguments() {
        return new Arguments();
    }

    /**
     * Create an instance of {@link PlusExpr }
     * 
     */
    public PlusExpr createPlusExpr() {
        return new PlusExpr();
    }

    /**
     * Create an instance of {@link DefModelBinaryOperation }
     * 
     */
    public DefModelBinaryOperation createDefModelBinaryOperation() {
        return new DefModelBinaryOperation();
    }

    /**
     * Create an instance of {@link MinusExpr }
     * 
     */
    public MinusExpr createMinusExpr() {
        return new MinusExpr();
    }

    /**
     * Create an instance of {@link MulExpr }
     * 
     */
    public MulExpr createMulExpr() {
        return new MulExpr();
    }

    /**
     * Create an instance of {@link DivExpr }
     * 
     */
    public DivExpr createDivExpr() {
        return new DivExpr();
    }

    /**
     * Create an instance of {@link FpowerExpr }
     * 
     */
    public FpowerExpr createFpowerExpr() {
        return new FpowerExpr();
    }

    /**
     * Create an instance of {@link FconcatExpr }
     * 
     */
    public FconcatExpr createFconcatExpr() {
        return new FconcatExpr();
    }

    /**
     * Create an instance of {@link LogEQExpr }
     * 
     */
    public LogEQExpr createLogEQExpr() {
        return new LogEQExpr();
    }

    /**
     * Create an instance of {@link LogNEQExpr }
     * 
     */
    public LogNEQExpr createLogNEQExpr() {
        return new LogNEQExpr();
    }

    /**
     * Create an instance of {@link LogGEExpr }
     * 
     */
    public LogGEExpr createLogGEExpr() {
        return new LogGEExpr();
    }

    /**
     * Create an instance of {@link LogGTExpr }
     * 
     */
    public LogGTExpr createLogGTExpr() {
        return new LogGTExpr();
    }

    /**
     * Create an instance of {@link LogLEExpr }
     * 
     */
    public LogLEExpr createLogLEExpr() {
        return new LogLEExpr();
    }

    /**
     * Create an instance of {@link LogLTExpr }
     * 
     */
    public LogLTExpr createLogLTExpr() {
        return new LogLTExpr();
    }

    /**
     * Create an instance of {@link LogAndExpr }
     * 
     */
    public LogAndExpr createLogAndExpr() {
        return new LogAndExpr();
    }

    /**
     * Create an instance of {@link LogOrExpr }
     * 
     */
    public LogOrExpr createLogOrExpr() {
        return new LogOrExpr();
    }

    /**
     * Create an instance of {@link LogEQVExpr }
     * 
     */
    public LogEQVExpr createLogEQVExpr() {
        return new LogEQVExpr();
    }

    /**
     * Create an instance of {@link LogNEQVExpr }
     * 
     */
    public LogNEQVExpr createLogNEQVExpr() {
        return new LogNEQVExpr();
    }

    /**
     * Create an instance of {@link UnaryMinusExpr }
     * 
     */
    public UnaryMinusExpr createUnaryMinusExpr() {
        return new UnaryMinusExpr();
    }

    /**
     * Create an instance of {@link DefModelUnaryOperation }
     * 
     */
    public DefModelUnaryOperation createDefModelUnaryOperation() {
        return new DefModelUnaryOperation();
    }

    /**
     * Create an instance of {@link LogNotExpr }
     * 
     */
    public LogNotExpr createLogNotExpr() {
        return new LogNotExpr();
    }

    /**
     * Create an instance of {@link UserBinaryExpr }
     * 
     */
    public UserBinaryExpr createUserBinaryExpr() {
        return new UserBinaryExpr();
    }

    /**
     * Create an instance of {@link UserUnaryExpr }
     * 
     */
    public UserUnaryExpr createUserUnaryExpr() {
        return new UserUnaryExpr();
    }

    /**
     * Create an instance of {@link FdoLoop }
     * 
     */
    public FdoLoop createFdoLoop() {
        return new FdoLoop();
    }

    /**
     * Create an instance of {@link Ffunction }
     * 
     */
    public Ffunction createFfunction() {
        return new Ffunction();
    }

    /**
     * Create an instance of {@link NamedValue }
     * 
     */
    public NamedValue createNamedValue() {
        return new NamedValue();
    }

    /**
     * Create an instance of {@link UpperBound }
     * 
     */
    public UpperBound createUpperBound() {
        return new UpperBound();
    }

    /**
     * Create an instance of {@link Step }
     * 
     */
    public Step createStep() {
        return new Step();
    }

    /**
     * Create an instance of {@link RepeatCount }
     * 
     */
    public RepeatCount createRepeatCount() {
        return new RepeatCount();
    }

    /**
     * Create an instance of {@link Declarations }
     * 
     */
    public Declarations createDeclarations() {
        return new Declarations();
    }

    /**
     * Create an instance of {@link VarDecl }
     * 
     */
    public VarDecl createVarDecl() {
        return new VarDecl();
    }

    /**
     * Create an instance of {@link ExternDecl }
     * 
     */
    public ExternDecl createExternDecl() {
        return new ExternDecl();
    }

    /**
     * Create an instance of {@link FuseDecl }
     * 
     */
    public FuseDecl createFuseDecl() {
        return new FuseDecl();
    }

    /**
     * Create an instance of {@link Rename }
     * 
     */
    public Rename createRename() {
        return new Rename();
    }

    /**
     * Create an instance of {@link FuseOnlyDecl }
     * 
     */
    public FuseOnlyDecl createFuseOnlyDecl() {
        return new FuseOnlyDecl();
    }

    /**
     * Create an instance of {@link Renamable }
     * 
     */
    public Renamable createRenamable() {
        return new Renamable();
    }

    /**
     * Create an instance of {@link FinterfaceDecl }
     * 
     */
    public FinterfaceDecl createFinterfaceDecl() {
        return new FinterfaceDecl();
    }

    /**
     * Create an instance of {@link FfunctionDecl }
     * 
     */
    public FfunctionDecl createFfunctionDecl() {
        return new FfunctionDecl();
    }

    /**
     * Create an instance of {@link FmoduleProcedureDecl }
     * 
     */
    public FmoduleProcedureDecl createFmoduleProcedureDecl() {
        return new FmoduleProcedureDecl();
    }

    /**
     * Create an instance of {@link FnamelistDecl }
     * 
     */
    public FnamelistDecl createFnamelistDecl() {
        return new FnamelistDecl();
    }

    /**
     * Create an instance of {@link VarList }
     * 
     */
    public VarList createVarList() {
        return new VarList();
    }

    /**
     * Create an instance of {@link FequivalenceDecl }
     * 
     */
    public FequivalenceDecl createFequivalenceDecl() {
        return new FequivalenceDecl();
    }

    /**
     * Create an instance of {@link FcommonDecl }
     * 
     */
    public FcommonDecl createFcommonDecl() {
        return new FcommonDecl();
    }

    /**
     * Create an instance of {@link FstructDecl }
     * 
     */
    public FstructDecl createFstructDecl() {
        return new FstructDecl();
    }

    /**
     * Create an instance of {@link FentryDecl }
     * 
     */
    public FentryDecl createFentryDecl() {
        return new FentryDecl();
    }

    /**
     * Create an instance of {@link FdataDecl }
     * 
     */
    public FdataDecl createFdataDecl() {
        return new FdataDecl();
    }

    /**
     * Create an instance of {@link ValueList }
     * 
     */
    public ValueList createValueList() {
        return new ValueList();
    }

    /**
     * Create an instance of {@link FpragmaStatement }
     * 
     */
    public FpragmaStatement createFpragmaStatement() {
        return new FpragmaStatement();
    }

    /**
     * Create an instance of {@link FstructType }
     * 
     */
    public FstructType createFstructType() {
        return new FstructType();
    }

    /**
     * Create an instance of {@link FstopStatement }
     * 
     */
    public FstopStatement createFstopStatement() {
        return new FstopStatement();
    }

    /**
     * Create an instance of {@link FassignStatement }
     * 
     */
    public FassignStatement createFassignStatement() {
        return new FassignStatement();
    }

    /**
     * Create an instance of {@link DefAssignStatement }
     * 
     */
    public DefAssignStatement createDefAssignStatement() {
        return new DefAssignStatement();
    }

    /**
     * Create an instance of {@link FpointerAssignStatement }
     * 
     */
    public FpointerAssignStatement createFpointerAssignStatement() {
        return new FpointerAssignStatement();
    }

    /**
     * Create an instance of {@link Else }
     * 
     */
    public Else createElse() {
        return new Else();
    }

    /**
     * Create an instance of {@link Body }
     * 
     */
    public Body createBody() {
        return new Body();
    }

    /**
     * Create an instance of {@link ExprStatement }
     * 
     */
    public ExprStatement createExprStatement() {
        return new ExprStatement();
    }

    /**
     * Create an instance of {@link FifStatement }
     * 
     */
    public FifStatement createFifStatement() {
        return new FifStatement();
    }

    /**
     * Create an instance of {@link Condition }
     * 
     */
    public Condition createCondition() {
        return new Condition();
    }

    /**
     * Create an instance of {@link Then }
     * 
     */
    public Then createThen() {
        return new Then();
    }

    /**
     * Create an instance of {@link FdoStatement }
     * 
     */
    public FdoStatement createFdoStatement() {
        return new FdoStatement();
    }

    /**
     * Create an instance of {@link FdoWhileStatement }
     * 
     */
    public FdoWhileStatement createFdoWhileStatement() {
        return new FdoWhileStatement();
    }

    /**
     * Create an instance of {@link ContinueStatement }
     * 
     */
    public ContinueStatement createContinueStatement() {
        return new ContinueStatement();
    }

    /**
     * Create an instance of {@link FcycleStatement }
     * 
     */
    public FcycleStatement createFcycleStatement() {
        return new FcycleStatement();
    }

    /**
     * Create an instance of {@link FexitStatement }
     * 
     */
    public FexitStatement createFexitStatement() {
        return new FexitStatement();
    }

    /**
     * Create an instance of {@link FreturnStatement }
     * 
     */
    public FreturnStatement createFreturnStatement() {
        return new FreturnStatement();
    }

    /**
     * Create an instance of {@link GotoStatement }
     * 
     */
    public GotoStatement createGotoStatement() {
        return new GotoStatement();
    }

    /**
     * Create an instance of {@link Params }
     * 
     */
    public Params createParams() {
        return new Params();
    }

    /**
     * Create an instance of {@link StatementLabel }
     * 
     */
    public StatementLabel createStatementLabel() {
        return new StatementLabel();
    }

    /**
     * Create an instance of {@link FselectCaseStatement }
     * 
     */
    public FselectCaseStatement createFselectCaseStatement() {
        return new FselectCaseStatement();
    }

    /**
     * Create an instance of {@link FcaseLabel }
     * 
     */
    public FcaseLabel createFcaseLabel() {
        return new FcaseLabel();
    }

    /**
     * Create an instance of {@link FwhereStatement }
     * 
     */
    public FwhereStatement createFwhereStatement() {
        return new FwhereStatement();
    }

    /**
     * Create an instance of {@link FpauseStatement }
     * 
     */
    public FpauseStatement createFpauseStatement() {
        return new FpauseStatement();
    }

    /**
     * Create an instance of {@link FreadStatement }
     * 
     */
    public FreadStatement createFreadStatement() {
        return new FreadStatement();
    }

    /**
     * Create an instance of {@link NamedValueList }
     * 
     */
    public NamedValueList createNamedValueList() {
        return new NamedValueList();
    }

    /**
     * Create an instance of {@link FwriteStatement }
     * 
     */
    public FwriteStatement createFwriteStatement() {
        return new FwriteStatement();
    }

    /**
     * Create an instance of {@link FprintStatement }
     * 
     */
    public FprintStatement createFprintStatement() {
        return new FprintStatement();
    }

    /**
     * Create an instance of {@link FrewindStatement }
     * 
     */
    public FrewindStatement createFrewindStatement() {
        return new FrewindStatement();
    }

    /**
     * Create an instance of {@link FendFileStatement }
     * 
     */
    public FendFileStatement createFendFileStatement() {
        return new FendFileStatement();
    }

    /**
     * Create an instance of {@link FbackspaceStatement }
     * 
     */
    public FbackspaceStatement createFbackspaceStatement() {
        return new FbackspaceStatement();
    }

    /**
     * Create an instance of {@link FopenStatement }
     * 
     */
    public FopenStatement createFopenStatement() {
        return new FopenStatement();
    }

    /**
     * Create an instance of {@link FcloseStatement }
     * 
     */
    public FcloseStatement createFcloseStatement() {
        return new FcloseStatement();
    }

    /**
     * Create an instance of {@link FinquireStatement }
     * 
     */
    public FinquireStatement createFinquireStatement() {
        return new FinquireStatement();
    }

    /**
     * Create an instance of {@link FformatDecl }
     * 
     */
    public FformatDecl createFformatDecl() {
        return new FformatDecl();
    }

    /**
     * Create an instance of {@link FallocateStatement }
     * 
     */
    public FallocateStatement createFallocateStatement() {
        return new FallocateStatement();
    }

    /**
     * Create an instance of {@link Alloc }
     * 
     */
    public Alloc createAlloc() {
        return new Alloc();
    }

    /**
     * Create an instance of {@link CoShape }
     * 
     */
    public CoShape createCoShape() {
        return new CoShape();
    }

    /**
     * Create an instance of {@link FdeallocateStatement }
     * 
     */
    public FdeallocateStatement createFdeallocateStatement() {
        return new FdeallocateStatement();
    }

    /**
     * Create an instance of {@link FnullifyStatement }
     * 
     */
    public FnullifyStatement createFnullifyStatement() {
        return new FnullifyStatement();
    }

    /**
     * Create an instance of {@link FcontainsStatement }
     * 
     */
    public FcontainsStatement createFcontainsStatement() {
        return new FcontainsStatement();
    }

    /**
     * Create an instance of {@link FfunctionDefinition }
     * 
     */
    public FfunctionDefinition createFfunctionDefinition() {
        return new FfunctionDefinition();
    }

    /**
     * Create an instance of {@link Text }
     * 
     */
    public Text createText() {
        return new Text();
    }

    /**
     * Create an instance of {@link Kind }
     * 
     */
    public Kind createKind() {
        return new Kind();
    }

    /**
     * Create an instance of {@link FfunctionType }
     * 
     */
    public FfunctionType createFfunctionType() {
        return new FfunctionType();
    }

    /**
     * Create an instance of {@link FmoduleDefinition }
     * 
     */
    public FmoduleDefinition createFmoduleDefinition() {
        return new FmoduleDefinition();
    }

    /**
     * Create an instance of {@link Len }
     * 
     */
    public Len createLen() {
        return new Len();
    }

    /**
     * Create an instance of {@link XcodeProgram }
     * 
     */
    public XcodeProgram createXcodeProgram() {
        return new XcodeProgram();
    }

    /**
     * Create an instance of {@link TypeTable }
     * 
     */
    public TypeTable createTypeTable() {
        return new TypeTable();
    }

    /**
     * Create an instance of {@link FbasicType }
     * 
     */
    public FbasicType createFbasicType() {
        return new FbasicType();
    }

    /**
     * Create an instance of {@link GlobalSymbols }
     * 
     */
    public GlobalSymbols createGlobalSymbols() {
        return new GlobalSymbols();
    }

    /**
     * Create an instance of {@link GlobalDeclarations }
     * 
     */
    public GlobalDeclarations createGlobalDeclarations() {
        return new GlobalDeclarations();
    }

}
